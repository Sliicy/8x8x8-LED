using _8x8x8_LED.Model;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.IO.Ports;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace _8x8x8_LED
{
    public partial class Testing : Form
    {
        public Testing(SerialPort serialPort)
        {
            InitializeComponent();
            this.serialPort = serialPort;
        }

        private readonly SerialPort serialPort;
        int amount = 16;
        private void BtnRed_Click(object sender, EventArgs e)
        {
            byte[] bytesToSend1 = new byte[] {
                0x00, 0xFF, 0x00, 0x00,
                (byte)numericUpDown1.Value,
                0x00,
                0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF,
                0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF,
            };
            byte[] bytesToSend2 = new byte[] {
                0x00, 0xFF, 0x00, 0x00,
                (byte)numericUpDown1.Value,
                0x02,
                0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF,
                0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF,
            };
            byte[] bytesToSend3 = new byte[] {
                0x00, 0xFF, 0x00, 0x00,
                (byte)numericUpDown1.Value,
                0x04,
                0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF,
                0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF,
            };
            byte[] bytesToSend4 = new byte[] {
                0x00, 0xFF, 0x00, 0x00,
                (byte)numericUpDown1.Value,
                0x06,
                0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF,
                0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF,
            };
            SerialHelper.SendPacket(CubeType.RGB, serialPort, bytesToSend1, false);
            System.Threading.Thread.Sleep(amount);
            SerialHelper.SendPacket(CubeType.RGB, serialPort, bytesToSend2, false);
            System.Threading.Thread.Sleep(amount);
            SerialHelper.SendPacket(CubeType.RGB, serialPort, bytesToSend3, false);
            System.Threading.Thread.Sleep(amount);
            SerialHelper.SendPacket(CubeType.RGB, serialPort, bytesToSend4, false);
            System.Threading.Thread.Sleep(amount);
        }

        private void BtnClear_Click(object sender, EventArgs e)
        {
            byte[] bytesToSend1 = new byte[] {
                0x00, 0xFF, 0x00, 0x00,
                (byte)numericUpDown1.Value,
                0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            };
            byte[] bytesToSend2 = new byte[] {
                0x00, 0xFF, 0x00, 0x00,
                (byte)numericUpDown1.Value,
                0x02,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            };
            byte[] bytesToSend3 = new byte[] {
                0x00, 0xFF, 0x00, 0x00,
                (byte)numericUpDown1.Value,
                0x04,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            };
            byte[] bytesToSend4 = new byte[] {
                0x00, 0xFF, 0x00, 0x00,
                (byte)numericUpDown1.Value,
                0x06,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            };
            SerialHelper.SendPacket(CubeType.RGB, serialPort, bytesToSend1, false);
            System.Threading.Thread.Sleep(amount);
            SerialHelper.SendPacket(CubeType.RGB, serialPort, bytesToSend2, false);
            System.Threading.Thread.Sleep(amount);
            SerialHelper.SendPacket(CubeType.RGB, serialPort, bytesToSend3, false);
            System.Threading.Thread.Sleep(amount);
            SerialHelper.SendPacket(CubeType.RGB, serialPort, bytesToSend4, false);
            System.Threading.Thread.Sleep(amount);
        }

        private void checkBox1_CheckedChanged(object sender, EventArgs e)
        {
            timer1.Enabled = checkBox1.Checked;
        }

        private void trackBar1_Scroll(object sender, EventArgs e)
        {
            timer1.Interval = trackBar1.Value;
        }

        bool red = false;
        private void timer1_Tick(object sender, EventArgs e)
        {
            if (red)
            {
                byte[] bytesToSend1 = new byte[] {
                0x00, 0xFF, 0x00, 0x00,
                0x00,
                0x00,
                0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF,
                0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF,
            };
                byte[] bytesToSend2 = new byte[] {
                0x00, 0xFF, 0x00, 0x00,
                0x00,
                0x02,
                0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF,
                0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF,
            };
                byte[] bytesToSend3 = new byte[] {
                0x00, 0xFF, 0x00, 0x00,
                0x00,
                0x04,
                0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF,
                0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF,
            };
                byte[] bytesToSend4 = new byte[] {
                0x00, 0xFF, 0x00, 0x00,
                0x00,
                0x06,
                0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF,
                0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF,
            };
                byte[] bytesToSend5 = new byte[] {
                0x00, 0xFF, 0x00, 0x00,
                0x01,
                0x00,
                0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF,
                0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF,
            };
                byte[] bytesToSend6 = new byte[] {
                0x00, 0xFF, 0x00, 0x00,
                0x01,
                0x02,
                0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF,
                0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF,
            };
                byte[] bytesToSend7 = new byte[] {
                0x00, 0xFF, 0x00, 0x00,
                0x01,
                0x04,
                0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF,
                0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF,
            };
                byte[] bytesToSend8 = new byte[] {
                0x00, 0xFF, 0x00, 0x00,
                0x01,
                0x06,
                0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF,
                0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF,
            };
                int amount = 16;
                SerialHelper.SendPacket(CubeType.RGB, serialPort, bytesToSend1, false);
                System.Threading.Thread.Sleep(amount);
                SerialHelper.SendPacket(CubeType.RGB, serialPort, bytesToSend2, false);
                System.Threading.Thread.Sleep(amount);
                SerialHelper.SendPacket(CubeType.RGB, serialPort, bytesToSend3, false);
                System.Threading.Thread.Sleep(amount);
                SerialHelper.SendPacket(CubeType.RGB, serialPort, bytesToSend4, false);
                System.Threading.Thread.Sleep(amount);
                SerialHelper.SendPacket(CubeType.RGB, serialPort, bytesToSend5, false);
                System.Threading.Thread.Sleep(amount);
                SerialHelper.SendPacket(CubeType.RGB, serialPort, bytesToSend6, false);
                System.Threading.Thread.Sleep(amount);
                SerialHelper.SendPacket(CubeType.RGB, serialPort, bytesToSend7, false);
                System.Threading.Thread.Sleep(amount);
                SerialHelper.SendPacket(CubeType.RGB, serialPort, bytesToSend8, false);
                System.Threading.Thread.Sleep(amount);
            }
            else
            {
                byte[] bytesToSend1 = new byte[] {
                0x00, 0xFF, 0x00, 0x00,
                0x00,
                0x00,
                0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
                0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
            };
                byte[] bytesToSend2 = new byte[] {
                0x00, 0xFF, 0x00, 0x00,
                0x00,
                0x02,
                0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
                0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
            };
                byte[] bytesToSend3 = new byte[] {
                0x00, 0xFF, 0x00, 0x00,
                0x00,
                0x04,
                0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
                0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
            };
                byte[] bytesToSend4 = new byte[] {
                0x00, 0xFF, 0x00, 0x00,
                0x00,
                0x06,
                0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
                0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
            };
                byte[] bytesToSend5 = new byte[] {
                0x00, 0xFF, 0x00, 0x00,
                0x01,
                0x00,
                0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
                0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
            };
                byte[] bytesToSend6 = new byte[] {
                0x00, 0xFF, 0x00, 0x00,
                0x01,
                0x02,
                0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
                0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
            };
                byte[] bytesToSend7 = new byte[] {
                0x00, 0xFF, 0x00, 0x00,
                0x01,
                0x04,
                0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
                0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
            };
                byte[] bytesToSend8 = new byte[] {
                0x00, 0xFF, 0x00, 0x00,
                0x01,
                0x06,
                0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
                0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
            };
                int amount = 16;
                SerialHelper.SendPacket(CubeType.RGB, serialPort, bytesToSend8, false);
                System.Threading.Thread.Sleep(amount);
                SerialHelper.SendPacket(CubeType.RGB, serialPort, bytesToSend7, false);
                System.Threading.Thread.Sleep(amount);
                SerialHelper.SendPacket(CubeType.RGB, serialPort, bytesToSend6, false);
                System.Threading.Thread.Sleep(amount);
                SerialHelper.SendPacket(CubeType.RGB, serialPort, bytesToSend5, false);
                System.Threading.Thread.Sleep(amount);
                SerialHelper.SendPacket(CubeType.RGB, serialPort, bytesToSend4, false);
                System.Threading.Thread.Sleep(amount);
                SerialHelper.SendPacket(CubeType.RGB, serialPort, bytesToSend3, false);
                System.Threading.Thread.Sleep(amount);
                SerialHelper.SendPacket(CubeType.RGB, serialPort, bytesToSend2, false);
                System.Threading.Thread.Sleep(amount);
                SerialHelper.SendPacket(CubeType.RGB, serialPort, bytesToSend1, false);
                System.Threading.Thread.Sleep(amount);
            }
            red = !red;
        }

        private void BtnGreen_Click(object sender, EventArgs e)
        {
            byte[] bytesToSend1 = new byte[] {
                0x00, 0xFF, 0x00, 0x00,
                (byte)numericUpDown1.Value,
                0x00,
                0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00,
                0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00,
            };
            byte[] bytesToSend2 = new byte[] {
                0x00, 0xFF, 0x00, 0x00,
                (byte)numericUpDown1.Value,
                0x02,
                0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00,
                0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00,
            };
            byte[] bytesToSend3 = new byte[] {
                0x00, 0xFF, 0x00, 0x00,
                (byte)numericUpDown1.Value,
                0x04,
                0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00,
                0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00,
            };
            byte[] bytesToSend4 = new byte[] {
                0x00, 0xFF, 0x00, 0x00,
                (byte)numericUpDown1.Value,
                0x06,
                0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00,
                0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00,
            };
            SerialHelper.SendPacket(CubeType.RGB, serialPort, bytesToSend1, false);
            System.Threading.Thread.Sleep(amount);
            SerialHelper.SendPacket(CubeType.RGB, serialPort, bytesToSend2, false);
            System.Threading.Thread.Sleep(amount);
            SerialHelper.SendPacket(CubeType.RGB, serialPort, bytesToSend3, false);
            System.Threading.Thread.Sleep(amount);
            SerialHelper.SendPacket(CubeType.RGB, serialPort, bytesToSend4, false);
            System.Threading.Thread.Sleep(amount);
        }

        private void BtnBlue_Click(object sender, EventArgs e)
        {
            byte[] bytesToSend1 = new byte[] {
                0x00, 0xFF, 0x00, 0x00,
                (byte)numericUpDown1.Value,
                0x00,
                0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
                0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
            };
            byte[] bytesToSend2 = new byte[] {
                0x00, 0xFF, 0x00, 0x00,
                (byte)numericUpDown1.Value,
                0x02,
                0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
                0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
            };
            byte[] bytesToSend3 = new byte[] {
                0x00, 0xFF, 0x00, 0x00,
                (byte)numericUpDown1.Value,
                0x04,
                0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
                0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
            };
            byte[] bytesToSend4 = new byte[] {
                0x00, 0xFF, 0x00, 0x00,
                (byte)numericUpDown1.Value,
                0x06,
                0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
                0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
            };
            SerialHelper.SendPacket(CubeType.RGB, serialPort, bytesToSend1, false);
            System.Threading.Thread.Sleep(amount);
            SerialHelper.SendPacket(CubeType.RGB, serialPort, bytesToSend2, false);
            System.Threading.Thread.Sleep(amount);
            SerialHelper.SendPacket(CubeType.RGB, serialPort, bytesToSend3, false);
            System.Threading.Thread.Sleep(amount);
            SerialHelper.SendPacket(CubeType.RGB, serialPort, bytesToSend4, false);
            System.Threading.Thread.Sleep(amount);
        }

        private void btnYellow_Click(object sender, EventArgs e)
        {
            byte[] bytesToSend1 = new byte[] {
                0x00, 0xFF, 0x00, 0x00,
                (byte)numericUpDown1.Value,
                0x00,
                0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF,
                0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF,
            };
            byte[] bytesToSend2 = new byte[] {
                0x00, 0xFF, 0x00, 0x00,
                (byte)numericUpDown1.Value,
                0x02,
                0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF,
                0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF,
            };
            byte[] bytesToSend3 = new byte[] {
                0x00, 0xFF, 0x00, 0x00,
                (byte)numericUpDown1.Value,
                0x04,
                0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF,
                0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF,
            };
            byte[] bytesToSend4 = new byte[] {
                0x00, 0xFF, 0x00, 0x00,
                (byte)numericUpDown1.Value,
                0x06,
                0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF,
                0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF,
            };
            SerialHelper.SendPacket(CubeType.RGB, serialPort, bytesToSend1, false);
            System.Threading.Thread.Sleep(amount);
            SerialHelper.SendPacket(CubeType.RGB, serialPort, bytesToSend2, false);
            System.Threading.Thread.Sleep(amount);
            SerialHelper.SendPacket(CubeType.RGB, serialPort, bytesToSend3, false);
            System.Threading.Thread.Sleep(amount);
            SerialHelper.SendPacket(CubeType.RGB, serialPort, bytesToSend4, false);
            System.Threading.Thread.Sleep(amount);
        }

        private void btnCyan_Click(object sender, EventArgs e)
        {
            byte[] bytesToSend1 = new byte[] {
                0x00, 0xFF, 0x00, 0x00,
                (byte)numericUpDown1.Value,
                0x00,
                0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00,
                0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00,
            };
            byte[] bytesToSend2 = new byte[] {
                0x00, 0xFF, 0x00, 0x00,
                (byte)numericUpDown1.Value,
                0x02,
                0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00,
                0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00,
            };
            byte[] bytesToSend3 = new byte[] {
                0x00, 0xFF, 0x00, 0x00,
                (byte)numericUpDown1.Value,
                0x04,
                0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00,
                0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00,
            };
            byte[] bytesToSend4 = new byte[] {
                0x00, 0xFF, 0x00, 0x00,
                (byte)numericUpDown1.Value,
                0x06,
                0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00,
                0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00,
            };
            SerialHelper.SendPacket(CubeType.RGB, serialPort, bytesToSend1, false);
            System.Threading.Thread.Sleep(amount);
            SerialHelper.SendPacket(CubeType.RGB, serialPort, bytesToSend2, false);
            System.Threading.Thread.Sleep(amount);
            SerialHelper.SendPacket(CubeType.RGB, serialPort, bytesToSend3, false);
            System.Threading.Thread.Sleep(amount);
            SerialHelper.SendPacket(CubeType.RGB, serialPort, bytesToSend4, false);
            System.Threading.Thread.Sleep(amount);
        }

        private void btnMagenta_Click(object sender, EventArgs e)
        {
            byte[] bytesToSend1 = new byte[] {
                0x00, 0xFF, 0x00, 0x00,
                (byte)numericUpDown1.Value,
                0x00,
                0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF,
                0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF,
            };
            byte[] bytesToSend2 = new byte[] {
                0x00, 0xFF, 0x00, 0x00,
                (byte)numericUpDown1.Value,
                0x02,
                0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF,
                0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF,
            };
            byte[] bytesToSend3 = new byte[] {
                0x00, 0xFF, 0x00, 0x00,
                (byte)numericUpDown1.Value,
                0x04,
                0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF,
                0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF,
            };
            byte[] bytesToSend4 = new byte[] {
                0x00, 0xFF, 0x00, 0x00,
                (byte)numericUpDown1.Value,
                0x06,
                0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF,
                0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF,
            };
            SerialHelper.SendPacket(CubeType.RGB, serialPort, bytesToSend1, false);
            System.Threading.Thread.Sleep(amount);
            SerialHelper.SendPacket(CubeType.RGB, serialPort, bytesToSend2, false);
            System.Threading.Thread.Sleep(amount);
            SerialHelper.SendPacket(CubeType.RGB, serialPort, bytesToSend3, false);
            System.Threading.Thread.Sleep(amount);
            SerialHelper.SendPacket(CubeType.RGB, serialPort, bytesToSend4, false);
            System.Threading.Thread.Sleep(amount);
        }
        
        private void btnWhite_Click(object sender, EventArgs e)
        {
            byte[] bytesToSend1 = new byte[] {
                0x00, 0xFF, 0x00, 0x00,
                (byte)numericUpDown1.Value,
                0x00,
                0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
                0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
            };
            byte[] bytesToSend2 = new byte[] {
                0x00, 0xFF, 0x00, 0x00,
                (byte)numericUpDown1.Value,
                0x02,
                0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
                0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
            };
            byte[] bytesToSend3 = new byte[] {
                0x00, 0xFF, 0x00, 0x00,
                (byte)numericUpDown1.Value,
                0x04,
                0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
                0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
            };
            byte[] bytesToSend4 = new byte[] {
                0x00, 0xFF, 0x00, 0x00,
                (byte)numericUpDown1.Value,
                0x06,
                0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
                0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
            };
            SerialHelper.SendPacket(CubeType.RGB, serialPort, bytesToSend1, false);
            System.Threading.Thread.Sleep(amount);
            SerialHelper.SendPacket(CubeType.RGB, serialPort, bytesToSend2, false);
            System.Threading.Thread.Sleep(amount);
            SerialHelper.SendPacket(CubeType.RGB, serialPort, bytesToSend3, false);
            System.Threading.Thread.Sleep(amount);
            SerialHelper.SendPacket(CubeType.RGB, serialPort, bytesToSend4, false);
            System.Threading.Thread.Sleep(amount);
        }

        private void button1_Click(object sender, EventArgs e)
        {
            numericUpDown1.Value = 0;
        }

        private void button2_Click(object sender, EventArgs e)
        {
            numericUpDown1.Value = 1;
        }
    }
}
